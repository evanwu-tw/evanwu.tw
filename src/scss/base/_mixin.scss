// *************************************
//
//   mixin
//   -> mixin setting
//
// *************************************

// -------------------------------------
//   Breakpoint - media queries
// -------------------------------------

@mixin bp($_bp) {
  @if map-has-key($bp, $_bp) {
    @media (max-width: #{map-get($bp, $_bp)}) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$bp}`. "
    + "Please make sure it is defined in `$bp` map.";
  }
}

// -------------------------------------
//   grid system
// -------------------------------------

// Grid Mixin
@mixin makeGrid($grid) {
  @for $_grid-i from 1 through $grid-col {
    [class*="#{$grid}-#{$_grid-i}"] > .#{$col-name} { 
      flex-basis: 100% / $_grid-i;
      max-width: 100% / $_grid-i;
    }
  }
}

// Colume Mixin
@mixin makeCol($col) {
  @for $_grid-i from 1 through $grid-col {
    [class*="#{$col}-#{$_grid-i}"] { 
      flex-basis: ($_grid-i/$grid-col) * 100%;
      max-width: ($_grid-i/$grid-col) * 100%;
    }
  }
}


// -------------------------------------
//   z-index
// -------------------------------------

@function map-has-nested-keys($map, $keys...) {
  @each $key in $keys {
    @if not map-has-key($map, $key) {
      @return false;
    }
    $map: map-get($map, $key);
  }
  @return true;
}
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}
@function z($layers...) {
  @if not map-has-nested-keys($z-layers, $layers...) {
    @warn "No layer found for `#{inspect($layers...)}` in $z-layers map. Property omitted.";
  }
  @return map-deep-get($z-layers, $layers...);
}